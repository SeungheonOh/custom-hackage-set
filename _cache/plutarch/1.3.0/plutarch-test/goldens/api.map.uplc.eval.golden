lookup.itself (program 1.0.0 (\i0 ->
                  (\i0
                    i0
                    i0 ->
                     (\i0 ->
                        (\i0 -> i2 (\i0 -> i2 i2 i1))
                          (\i0 -> i2 (\i0 -> i2 i2 i1)))
                       (\i0
                         i0 ->
                          force (force (force chooseList)
                                   i1
                                   (delay (\i0 i0 -> force i1))
                                   (delay (force (force ifThenElse
                                                    (equalsData
                                                       (force (force fstPair)
                                                          (force headList i1))
                                                       i4)
                                                    (delay (i5
                                                              (force headList
                                                                 i1)))
                                                    (delay (i2
                                                              (force tailList
                                                                 i1))))))))
                       i1)
                    (\i0 ->
                       (\i0 i0 i0 -> i2 i3)
                         (unIData (force (force sndPair) i1)))
                    (bData i1)))
lookup.hit (program 1.0.0 (\i0 i0 -> i2 42))
lookup.miss (program 1.0.0 (\i0 i0 -> force i1))
lookupData.hit (program 1.0.0 (\i0 i0 -> i2 #182a))
lookupData.miss (program 1.0.0 (\i0 i0 -> force i1))
findWithDefault.itself (program 1.0.0 (\i0
                 i0 ->
                  (\i0
                    i0
                    i0
                    i0 ->
                     (\i0 ->
                        (\i0 -> i2 (\i0 -> i2 i2 i1))
                          (\i0 -> i2 (\i0 -> i2 i2 i1)))
                       (\i0
                         i0 ->
                          force (force (force chooseList)
                                   i1
                                   (delay i5)
                                   (delay (force (force ifThenElse
                                                    (equalsData
                                                       (force (force fstPair)
                                                          (force headList i1))
                                                       i6)
                                                    (delay (i4
                                                              (force (force sndPair)
                                                                 (force headList
                                                                    i1))))
                                                    (delay (i2
                                                              (force tailList
                                                                 i1))))))))
                       i1)
                    (bData i1)
                    i2
                    unIData))
findWithDefault.hit (program 1.0.0 42)
findWithDefault.hit2 (program 1.0.0 6)
findWithDefault.miss (program 1.0.0 12)
singleton (program 1.0.0 [(#436b6579, #182a)])
singletonData (program 1.0.0 [(#436b6579, #182a)])
insert.empty (program 1.0.0 [(#436b6579, #182a)])
insert.replace (program 1.0.0 [(#436b6579, #1854)])
delete.empty (program 1.0.0 [])
delete.only (program 1.0.0 [])
delete.miss (program 1.0.0 [(#436b6579, #182a)])
delete.new (program 1.0.0 [(#436b6579, #182a)])
delete.old (program 1.0.0 [(#466e65776b6579, #06)])
difference.emptyLeft (program 1.0.0 [])
difference.emptyRight (program 1.0.0 [(#436b6579, #182a)])
difference.emptyResult (program 1.0.0 [])
difference.partialOverlap (program 1.0.0 [(#4161, #182a)])
zipMapsWith.(-) (program 1.0.0 [(#4161, #182a), (#4162, #0d), (#4163, #26)])
leftBiasedUnion.const (program 1.0.0 [(#4161, #182a), (#4162, #06), (#4163, #17)])
unionResolvingCollisionsWith.const (program 1.0.0 [(#4161, #182a), (#4162, #06), (#4163, #17)])
unionResolvingCollisionsWith.flip const (program 1.0.0 [(#4161, #182a), (#4162, #07), (#4163, #17)])
unionResolvingCollisionsWith.double (program 1.0.0 [(#436b6579, #1854)])
unionResolvingCollisionsWith.(+) (program 1.0.0 [(#436b6579, #1841)])
unionResolvingCollisionsWith.preservesCombineCommutativity (program 1.0.0 [(#436b6579, #1841)])
unionResolvingCollisionsWithData.const (program 1.0.0 [(#436b6579, #182a)])
unionResolvingCollisionsWithData.emptyLeft (program 1.0.0 [(#436b6579, #182a)])
unionResolvingCollisionsWithData.emptyRight (program 1.0.0 [(#436b6579, #182a)])
unionResolvingCollisionsWithData.distinctKeys (program 1.0.0 [(#436b6579, #182a), (#466e65776b6579, #06)])
intersectionWith.const (program 1.0.0 [(#4162, #06)])
intersectionWith.flip const (program 1.0.0 [(#4162, #07)])
intersectionWith.double (program 1.0.0 [(#436b6579, #1854)])
intersectionWith.(+) (program 1.0.0 [(#436b6579, #1841)])
intersectionWith.preservesCombineCommutativity (program 1.0.0 [(#436b6579, #1841)])
intersectionWith.partialKeyMismatch (program 1.0.0 [(#436b6579, #1841)])
intersectionWithData.const (program 1.0.0 [(#436b6579, #182a)])
intersectionWithData.emptyLeft (program 1.0.0 [])
intersectionWithData.emptyRight (program 1.0.0 [])
intersectionWithData.keyMismatch (program 1.0.0 [])