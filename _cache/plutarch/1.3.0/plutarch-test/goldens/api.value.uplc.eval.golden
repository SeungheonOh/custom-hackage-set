singleton (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e01)])
singletonData (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e01)])
valueOf.itself (program 1.0.0 (\i0
                 i0
                 i0 ->
                  (\i0 ->
                     (\i0
                       i0
                       i0
                       i0 ->
                        (\i0 ->
                           (\i0 -> i2 (\i0 -> i2 i2 i1))
                             (\i0 -> i2 (\i0 -> i2 i2 i1)))
                          (\i0
                            i0 ->
                             force (force (force chooseList)
                                      i1
                                      (delay i5)
                                      (delay (force (force ifThenElse
                                                       (equalsData
                                                          (force (force fstPair)
                                                             (force headList
                                                                i1))
                                                          i6)
                                                       (delay (i4
                                                                 (force (force sndPair)
                                                                    (force headList
                                                                       i1))))
                                                       (delay (i2
                                                                 (force tailList
                                                                    i1))))))))
                          i1)
                       (bData i1))
                    i2
                    0
                    (\i0 ->
                       (\i0 ->
                          (\i0
                            i0
                            i0
                            i0 ->
                             (\i0 ->
                                (\i0 -> i2 (\i0 -> i2 i2 i1))
                                  (\i0 -> i2 (\i0 -> i2 i2 i1)))
                               (\i0
                                 i0 ->
                                  force (force (force chooseList)
                                           i1
                                           (delay i5)
                                           (delay (force (force ifThenElse
                                                            (equalsData
                                                               (force (force fstPair)
                                                                  (force headList
                                                                     i1))
                                                               i6)
                                                            (delay (i4
                                                                      (force (force sndPair)
                                                                         (force headList
                                                                            i1))))
                                                            (delay (i2
                                                                      (force tailList
                                                                         i1))))))))
                               i1)
                            (bData i1))
                         i2
                         0
                         unIData
                         (unMapData i1))
                    i3))
valueOf.applied (program 1.0.0 1)
valueOf.growing.1 (program 1.0.0 0)
valueOf.growing.2 (program 1.0.0 0)
valueOf.growing.3 (program 1.0.0 0)
valueOf.growing.4 (program 1.0.0 0)
valueOf.growing.5 (program 1.0.0 0)
valueOf.growing.6 (program 1.0.0 0)
valueOf.growing.7 (program 1.0.0 0)
valueOf.growing.8 (program 1.0.0 0)
valueOf.growing.9 (program 1.0.0 1)
valueOf.growing.10 (program 1.0.0 1)
valueOf.growing.11 (program 1.0.0 1)
valueOf.growing.12 (program 1.0.0 1)
valueOf.growing.13 (program 1.0.0 1)
valueOf.growing.14 (program 1.0.0 1)
valueOf.growing.15 (program 1.0.0 1)
valueOf.growing.16 (program 1.0.0 1)
valueOf.growing.17 (program 1.0.0 1)
leftBiasedCurrencyUnion.growing.1 (program 1.0.0 [ (#41c0, #a149736f6d65746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.2 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.3 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.4 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.5 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.6 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.7 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.8 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedCurrencyUnion.growing.9 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.10 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.11 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.12 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.13 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.14 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.15 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.16 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01)
               , (#41ce, #a145746f6b656e01) ])
leftBiasedCurrencyUnion.growing.17 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01)
               , (#41ce, #a145746f6b656e01)
               , (#41cf, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.1 (program 1.0.0 [ (#41c0, #a149736f6d65746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.2 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.3 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.4 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.5 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.6 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.7 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.8 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
leftBiasedTokenUnion.growing.9 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01) ])
leftBiasedTokenUnion.growing.10 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.11 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.12 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.13 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.14 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.15 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.16 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01)
               , (#41ce, #a145746f6b656e01) ])
leftBiasedTokenUnion.growing.17 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01)
               , (#41ce, #a145746f6b656e01)
               , (#41cf, #a145746f6b656e01) ])
unionResolvingCollisionsWith.const (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e01)])
unionResolvingCollisionsWith.(+).itself (program 1.0.0 (\i0
                 i0 ->
                  (\i0
                    i0
                    i0 ->
                     force (force (force chooseList)
                              i2
                              (delay i1)
                              (delay ((\i0 ->
                                         (\i0 ->
                                            (\i0 -> i2 (\i0 -> i2 i2 i1))
                                              (\i0 -> i2 (\i0 -> i2 i2 i1)))
                                           (\i0
                                             i0
                                             i0
                                             i0 ->
                                              force (force (force chooseList)
                                                       i1
                                                       (delay (force mkCons
                                                                 i3
                                                                 i2))
                                                       (delay ((\i0 ->
                                                                  (\i0 ->
                                                                     (\i0 ->
                                                                        force (force ifThenElse
                                                                                 (equalsData
                                                                                    i2
                                                                                    i1)
                                                                                 (delay (force mkCons
                                                                                           (mkPairData
                                                                                              i2
                                                                                              (mapData
                                                                                                 (i11
                                                                                                    (unMapData
                                                                                                       (force (force sndPair)
                                                                                                          i6))
                                                                                                    (unMapData
                                                                                                       (force (force sndPair)
                                                                                                          i3)))))
                                                                                           (i8
                                                                                              i7
                                                                                              i5
                                                                                              (force tailList
                                                                                                 i4))))
                                                                                 (delay (force (force ifThenElse
                                                                                                  (lessThanByteString
                                                                                                     (unBData
                                                                                                        i2)
                                                                                                     (unBData
                                                                                                        i1))
                                                                                                  (delay (force mkCons
                                                                                                            i6
                                                                                                            (i8
                                                                                                               i7
                                                                                                               i5
                                                                                                               i4)))
                                                                                                  (delay (force mkCons
                                                                                                            i3
                                                                                                            (i8
                                                                                                               i7
                                                                                                               (force tailList
                                                                                                                  i4)
                                                                                                               (force mkCons
                                                                                                                  i6
                                                                                                                  i5)))))))))
                                                                       (force (force fstPair)
                                                                          i2))
                                                                    (force (force fstPair)
                                                                       i4))
                                                                 (force headList
                                                                    i1))))))
                                        (\i0
                                          i0
                                          i0 ->
                                           force (force (force chooseList)
                                                    i2
                                                    (delay i1)
                                                    (delay (i3
                                                              (force headList
                                                                 i2)
                                                              (force tailList
                                                                 i2)
                                                              i1))))
                                        (force headList i2)
                                        (force tailList i2)
                                        i1))))
                    (\i0
                      i0 ->
                       force (force (force chooseList)
                                i2
                                (delay i1)
                                (delay ((\i0 ->
                                           (\i0 ->
                                              (\i0 -> i2 (\i0 -> i2 i2 i1))
                                                (\i0 -> i2 (\i0 -> i2 i2 i1)))
                                             (\i0
                                               i0
                                               i0
                                               i0 ->
                                                force (force (force chooseList)
                                                         i1
                                                         (delay (force mkCons
                                                                   i3
                                                                   i2))
                                                         (delay ((\i0 ->
                                                                    (\i0 ->
                                                                       (\i0 ->
                                                                          force (force ifThenElse
                                                                                   (equalsData
                                                                                      i2
                                                                                      i1)
                                                                                   (delay (force mkCons
                                                                                             (mkPairData
                                                                                                i2
                                                                                                (iData
                                                                                                   (addInteger
                                                                                                      (unIData
                                                                                                         (force (force sndPair)
                                                                                                            i6))
                                                                                                      (unIData
                                                                                                         (force (force sndPair)
                                                                                                            i3)))))
                                                                                             (i8
                                                                                                i7
                                                                                                i5
                                                                                                (force tailList
                                                                                                   i4))))
                                                                                   (delay (force (force ifThenElse
                                                                                                    (lessThanByteString
                                                                                                       (unBData
                                                                                                          i2)
                                                                                                       (unBData
                                                                                                          i1))
                                                                                                    (delay (force mkCons
                                                                                                              i6
                                                                                                              (i8
                                                                                                                 i7
                                                                                                                 i5
                                                                                                                 i4)))
                                                                                                    (delay (force mkCons
                                                                                                              i3
                                                                                                              (i8
                                                                                                                 i7
                                                                                                                 (force tailList
                                                                                                                    i4)
                                                                                                                 (force mkCons
                                                                                                                    i6
                                                                                                                    i5)))))))))
                                                                         (force (force fstPair)
                                                                            i2))
                                                                      (force (force fstPair)
                                                                         i4))
                                                                   (force headList
                                                                      i1))))))
                                          (\i0
                                            i0
                                            i0 ->
                                             force (force (force chooseList)
                                                      i2
                                                      (delay i1)
                                                      (delay (i3
                                                                (force headList
                                                                   i2)
                                                                (force tailList
                                                                   i2)
                                                                i1))))
                                          (force headList i2)
                                          (force tailList i2)
                                          i1))))
                    i2
                    i1))
unionResolvingCollisionsWith.(+).applied (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e02)])
unionResolvingCollisionsWith.tokens (program 1.0.0 [(#41c0, #a24a6f74686572746f6b656e0149736f6d65746f6b656e01)])
unionResolvingCollisionsWith.symbols (program 1.0.0 [ (#41c0, #a149736f6d65746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.1 (program 1.0.0 [ (#41c0, #a149736f6d65746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.2 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.3 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.4 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.5 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.6 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.7 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.8 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
unionResolvingCollisionsWith.growing.9 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01) ])
unionResolvingCollisionsWith.growing.10 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.11 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.12 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.13 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.14 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.15 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.16 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01)
               , (#41ce, #a145746f6b656e01) ])
unionResolvingCollisionsWith.growing.17 (program 1.0.0 [ (#41c0, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c1, #a145746f6b656e01)
               , (#41c2, #a145746f6b656e01)
               , (#41c3, #a145746f6b656e01)
               , (#41c4, #a145746f6b656e01)
               , (#41c5, #a145746f6b656e01)
               , (#41c6, #a145746f6b656e01)
               , (#41c7, #a249736f6d65746f6b656e0145746f6b656e01)
               , (#41c8, #a145746f6b656e01)
               , (#41c9, #a145746f6b656e01)
               , (#41ca, #a145746f6b656e01)
               , (#41cb, #a145746f6b656e01)
               , (#41cc, #a145746f6b656e01)
               , (#41cd, #a145746f6b656e01)
               , (#41ce, #a145746f6b656e01)
               , (#41cf, #a145746f6b656e01) ])
unionResolvingCollisionsWithData const.itself (program 1.0.0 (\i0
                 i0
                 i0 ->
                  (\i0
                    i0
                    i0 ->
                     force (force (force chooseList)
                              i2
                              (delay i1)
                              (delay ((\i0 ->
                                         (\i0 ->
                                            (\i0 -> i2 (\i0 -> i2 i2 i1))
                                              (\i0 -> i2 (\i0 -> i2 i2 i1)))
                                           (\i0
                                             i0
                                             i0
                                             i0
                                             i0 ->
                                              force (force (force chooseList)
                                                       i1
                                                       (delay (force (i4
                                                                        (delay (force mkCons
                                                                                  i3
                                                                                  i2))
                                                                        (delay (force mkCons
                                                                                  i3
                                                                                  i2)))))
                                                       (delay ((\i0 ->
                                                                  (\i0 ->
                                                                     (\i0 ->
                                                                        force (force ifThenElse
                                                                                 (equalsData
                                                                                    i2
                                                                                    i1)
                                                                                 (delay (force (i7
                                                                                                  (delay (force mkCons
                                                                                                            (mkPairData
                                                                                                               i2
                                                                                                               (mapData
                                                                                                                  (i12
                                                                                                                     (unMapData
                                                                                                                        (force (force sndPair)
                                                                                                                           i6))
                                                                                                                     (unMapData
                                                                                                                        (force (force sndPair)
                                                                                                                           i3)))))
                                                                                                            (i9
                                                                                                               i8
                                                                                                               i5
                                                                                                               (force tailList
                                                                                                                  i4))))
                                                                                                  (delay (force mkCons
                                                                                                            (mkPairData
                                                                                                               i2
                                                                                                               (mapData
                                                                                                                  (i12
                                                                                                                     (unMapData
                                                                                                                        (force (force sndPair)
                                                                                                                           i3))
                                                                                                                     (unMapData
                                                                                                                        (force (force sndPair)
                                                                                                                           i6)))))
                                                                                                            (i9
                                                                                                               i8
                                                                                                               (force tailList
                                                                                                                  i4)
                                                                                                               i5))))))
                                                                                 (delay (force (force ifThenElse
                                                                                                  (lessThanByteString
                                                                                                     (unBData
                                                                                                        i2)
                                                                                                     (unBData
                                                                                                        i1))
                                                                                                  (delay (force (i7
                                                                                                                   (delay (force mkCons
                                                                                                                             i6
                                                                                                                             (i9
                                                                                                                                i8
                                                                                                                                i5
                                                                                                                                i4)))
                                                                                                                   (delay (force mkCons
                                                                                                                             i6
                                                                                                                             (i9
                                                                                                                                i8
                                                                                                                                i4
                                                                                                                                i5))))))
                                                                                                  (delay (force (i7
                                                                                                                   (delay (force mkCons
                                                                                                                             i3
                                                                                                                             (i9
                                                                                                                                i8
                                                                                                                                (force mkCons
                                                                                                                                   i6
                                                                                                                                   i5)
                                                                                                                                (force tailList
                                                                                                                                   i4))))
                                                                                                                   (delay (force mkCons
                                                                                                                             i3
                                                                                                                             (i9
                                                                                                                                i8
                                                                                                                                (force tailList
                                                                                                                                   i4)
                                                                                                                                (force mkCons
                                                                                                                                   i6
                                                                                                                                   i5))))))))))))
                                                                       (force (force fstPair)
                                                                          i2))
                                                                    (force (force fstPair)
                                                                       i4))
                                                                 (force headList
                                                                    i1))))))
                                        (\i0
                                          i0
                                          i0 ->
                                           force (force (force chooseList)
                                                    i2
                                                    (delay i1)
                                                    (delay (i3
                                                              (\i0 i0 -> i2)
                                                              (force headList
                                                                 i2)
                                                              (force tailList
                                                                 i2)
                                                              i1))))
                                        (\i0 i0 -> i2)
                                        (force headList i2)
                                        (force tailList i2)
                                        i1))))
                    (\i0
                      i0 ->
                       force (force (force chooseList)
                                i2
                                (delay i1)
                                (delay ((\i0 ->
                                           (\i0 ->
                                              (\i0 -> i2 (\i0 -> i2 i2 i1))
                                                (\i0 -> i2 (\i0 -> i2 i2 i1)))
                                             (\i0
                                               i0
                                               i0
                                               i0
                                               i0 ->
                                                force (force (force chooseList)
                                                         i1
                                                         (delay (force (i4
                                                                          (delay (force mkCons
                                                                                    i3
                                                                                    i2))
                                                                          (delay (force mkCons
                                                                                    i3
                                                                                    i2)))))
                                                         (delay ((\i0 ->
                                                                    (\i0 ->
                                                                       (\i0 ->
                                                                          force (force ifThenElse
                                                                                   (equalsData
                                                                                      i2
                                                                                      i1)
                                                                                   (delay (force (i7
                                                                                                    (delay (force mkCons
                                                                                                              (mkPairData
                                                                                                                 i2
                                                                                                                 (i14
                                                                                                                    (force (force sndPair)
                                                                                                                       i6)
                                                                                                                    (force (force sndPair)
                                                                                                                       i3)))
                                                                                                              (i9
                                                                                                                 i8
                                                                                                                 i5
                                                                                                                 (force tailList
                                                                                                                    i4))))
                                                                                                    (delay (force mkCons
                                                                                                              (mkPairData
                                                                                                                 i2
                                                                                                                 (i14
                                                                                                                    (force (force sndPair)
                                                                                                                       i3)
                                                                                                                    (force (force sndPair)
                                                                                                                       i6)))
                                                                                                              (i9
                                                                                                                 i8
                                                                                                                 (force tailList
                                                                                                                    i4)
                                                                                                                 i5))))))
                                                                                   (delay (force (force ifThenElse
                                                                                                    (lessThanByteString
                                                                                                       (unBData
                                                                                                          i2)
                                                                                                       (unBData
                                                                                                          i1))
                                                                                                    (delay (force (i7
                                                                                                                     (delay (force mkCons
                                                                                                                               i6
                                                                                                                               (i9
                                                                                                                                  i8
                                                                                                                                  i5
                                                                                                                                  i4)))
                                                                                                                     (delay (force mkCons
                                                                                                                               i6
                                                                                                                               (i9
                                                                                                                                  i8
                                                                                                                                  i4
                                                                                                                                  i5))))))
                                                                                                    (delay (force (i7
                                                                                                                     (delay (force mkCons
                                                                                                                               i3
                                                                                                                               (i9
                                                                                                                                  i8
                                                                                                                                  (force mkCons
                                                                                                                                     i6
                                                                                                                                     i5)
                                                                                                                                  (force tailList
                                                                                                                                     i4))))
                                                                                                                     (delay (force mkCons
                                                                                                                               i3
                                                                                                                               (i9
                                                                                                                                  i8
                                                                                                                                  (force tailList
                                                                                                                                     i4)
                                                                                                                                  (force mkCons
                                                                                                                                     i6
                                                                                                                                     i5))))))))))))
                                                                         (force (force fstPair)
                                                                            i2))
                                                                      (force (force fstPair)
                                                                         i4))
                                                                   (force headList
                                                                      i1))))))
                                          (\i0
                                            i0
                                            i0 ->
                                             force (force (force chooseList)
                                                      i2
                                                      (delay i1)
                                                      (delay (i3
                                                                (\i0 i0 -> i2)
                                                                (force headList
                                                                   i2)
                                                                (force tailList
                                                                   i2)
                                                                i1))))
                                          (\i0 i0 -> i2)
                                          (force headList i2)
                                          (force tailList i2)
                                          i1))))
                    i2
                    i1))
unionResolvingCollisionsWithData const.applied (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e01)])
inv (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e20)])
equality.itself (program 1.0.0 (\i0 i0 -> equalsData (mapData i2) (mapData i1)))
equality.triviallyTrue (program 1.0.0 True)
equality.triviallyFalse (program 1.0.0 False)
equality.swappedTokensTrue (program 1.0.0 True)
equality.swappedSymbolsTrue (program 1.0.0 True)
equality.growing.1 (program 1.0.0 True)
equality.growing.2 (program 1.0.0 True)
equality.growing.3 (program 1.0.0 True)
equality.growing.4 (program 1.0.0 True)
equality.growing.5 (program 1.0.0 True)
equality.growing.6 (program 1.0.0 True)
equality.growing.7 (program 1.0.0 True)
equality.growing.8 (program 1.0.0 True)
equality.growing.9 (program 1.0.0 True)
equality.growing.10 (program 1.0.0 True)
equality.growing.11 (program 1.0.0 True)
equality.growing.12 (program 1.0.0 True)
equality.growing.13 (program 1.0.0 True)
equality.growing.14 (program 1.0.0 True)
equality.growing.15 (program 1.0.0 True)
equality.growing.16 (program 1.0.0 True)
equality.growing.17 (program 1.0.0 True)
normalize.identity (program 1.0.0 [ (#41c0, #a149736f6d65746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
normalize.empty (program 1.0.0 [])
assertSorted.succeeds (program 1.0.0 [ (#41c0, #a149736f6d65746f6b656e01)
               , (#41c7, #a149736f6d65746f6b656e01) ])
assertSorted.fails on malsorted symbols (program 1.0.0 error)
assertSorted.fails on zero quantities (program 1.0.0 error)
assertSorted.fails on empty token map (program 1.0.0 error)
Ada.adaSymbol (program 1.0.0 #)
Ada.adaToken (program 1.0.0 #)
Ada.lovelaceValueOf (program 1.0.0 (\i0 ->
                  force (force (force chooseList)
                           i1
                           (delay 0)
                           (delay (force ifThenElse
                                     (equalsData
                                        (force (force fstPair)
                                           (force headList i1))
                                        (bData #))
                                     (unIData
                                        (force (force sndPair)
                                           (force headList
                                              (unMapData
                                                 (force (force sndPair)
                                                    (force headList i1))))))
                                     0)))))
Ada.isAdaOnlyValue.itself (program 1.0.0 (\i0 ->
                  force (force (force chooseList)
                           i1
                           (delay True)
                           (delay ((\i0 i0 -> force ifThenElse i2 i1 False)
                                     (force nullList (force tailList i1))
                                     (equalsData
                                        (force (force fstPair)
                                           (force headList i1))
                                        (bData #)))))))
Ada.isAdaOnlyValue.true on empty (program 1.0.0 True)
Ada.isAdaOnlyValue.trivially false (program 1.0.0 False)
Ada.isAdaOnlyValue.less trivially false (program 1.0.0 False)
Ada.adaOnlyValue.itself (program 1.0.0 (\i0 ->
                  force (force (force chooseList)
                           i1
                           (delay i1)
                           (delay (force ifThenElse
                                     (equalsData
                                        (force (force fstPair)
                                           (force headList i1))
                                        (bData #))
                                     ((\i0 -> force mkCons i1 [])
                                        (force headList i1))
                                     [])))))
Ada.adaOnlyValue.on empty (program 1.0.0 [])
Ada.adaOnlyValue.on non-Ada (program 1.0.0 [])
Ada.adaOnlyValue.on Ada (program 1.0.0 [(#40, #a1401a00989680)])
Ada.noAdaValue.itself (program 1.0.0 (\i0 ->
                  force (force (force chooseList)
                           i1
                           (delay i1)
                           (delay (force ifThenElse
                                     (equalsData
                                        (force (force fstPair)
                                           (force headList i1))
                                        (bData #))
                                     (force tailList i1)
                                     i1)))))
Ada.noAdaValue.on empty (program 1.0.0 [])
Ada.noAdaValue.on non-Ada (program 1.0.0 [(#41c0, #a149736f6d65746f6b656e01)])
Ada.noAdaValue.on Ada (program 1.0.0 [])