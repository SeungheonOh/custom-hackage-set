add1 (program 1.0.0 (\i0 i0 -> addInteger (addInteger i2 i1) 1))
add1Hoisted (program 1.0.0 (\i0 i0 -> addInteger (addInteger i2 i1) 1))
example1 (program 1.0.0 ((\i0 -> addInteger (i1 12 32) (i1 5 4))
                  (\i0 i0 -> addInteger (addInteger i2 i1) 1)))
example2 (program 1.0.0 (\i0 ->
                  i1 (\i0 -> addInteger i1 1) (\i0 -> subtractInteger i1 1)))
fib.lam (program 1.0.0 ((\i0 ->
                   (\i0 ->
                      (\i0 -> i2 (\i0 -> i2 i2 i1))
                        (\i0 -> i2 (\i0 -> i2 i2 i1)))
                     (\i0
                       i0 ->
                        force (i3
                                 (equalsInteger i1 0)
                                 (delay 0)
                                 (delay (force (i3
                                                  (equalsInteger i1 1)
                                                  (delay 1)
                                                  (delay (addInteger
                                                            (i2
                                                               (subtractInteger
                                                                  i1
                                                                  1))
                                                            (i2
                                                               (subtractInteger
                                                                  i1
                                                                  2))))))))))
                  (force ifThenElse)))
fib.app.9 (program 1.0.0 ((\i0 ->
                   (\i0 ->
                      (\i0 -> i2 (\i0 -> i2 i2 i1))
                        (\i0 -> i2 (\i0 -> i2 i2 i1)))
                     (\i0
                       i0 ->
                        force (i3
                                 (equalsInteger i1 0)
                                 (delay 0)
                                 (delay (force (i3
                                                  (equalsInteger i1 1)
                                                  (delay 1)
                                                  (delay (addInteger
                                                            (i2
                                                               (subtractInteger
                                                                  i1
                                                                  1))
                                                            (i2
                                                               (subtractInteger
                                                                  i1
                                                                  2)))))))))
                     9)
                  (force ifThenElse)))
uglyDouble (program 1.0.0 (\i0 -> addInteger i1 i1))